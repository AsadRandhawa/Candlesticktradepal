{"version":3,"sources":["axiosInstance.js","app/user-pages/UserProfile.js"],"names":["axiosInstance","axios","create","baseURL","UserProfile","data","setData","useState","modaldata","setModaldata","open","setOpen","period","setPeriod","addperiod","setAddperiod","passwords","setPasswords","lastpassword","newpassword","placeholderStyle","color","useEffect","user","userId","localStorage","getItem","post","then","res","dead","moment","Date","format","registerTime","message","config","top","duration","warning","onClose","React","createElement","Fragment","className","for","Input","placeholder","id","value","firstName","style","width","lastname","email","username","Phone","country","Button","float","alignItems","onClick","handleModalOpen","Dialog","PaperProps","borderRadius","DialogTitle","textAlign","background","DialogContent","onSubmit","e","preventDefault","Stack","sx","minWidth","xs","sm","md","gap","marginTop","TextField","inputProps","name","onChange","target","type","max","min","DialogActions","p","backgroundColor","handleSubmit","newUser","_id","request","setItem","success","variant"],"mappings":"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","file":"static/js/21.fea72753.chunk.js","sourcesContent":["// src/axiosInstance.js\nimport axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://converg-production-28fb.up.railway.app', // replace with your actual base URL\n});\n\nexport default axiosInstance;\n","import axios from \"../../axiosInstance\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Input,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n  Stack,\n  TextField,\n} from \"@mui/material\";\nimport moment from \"moment\";\nimport { message } from \"antd\";\n\nconst UserProfile = () => {\n\n  const [data, setData] = useState([]);\n  const [modaldata, setModaldata] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [period, setPeriod] = useState(0);\n  const [addperiod, setAddperiod] = useState();\n  const [passwords, setPasswords] = useState({\n    lastpassword: \"\",\n    newpassword: \"\"\n  })\n  const placeholderStyle = {\n    color: \"white\",\n\n  };\n  useEffect(() => {\n    const user = {\n      userId: localStorage.getItem(\"UserId\"),\n    };\n    axios.post(\"/api/users/getuser\", user).then((res) => {\n      setData(res.data);\n      setModaldata(res.data)\n      let dead = 0;\n      if (\n        moment(new Date()).format(\"MM\") -\n        moment(res.data.registerTime).format(\"MM\") >\n        0\n      ) {\n        dead +=\n          (moment(new Date()).format(\"MM\") -\n            moment(res.data.registerTime).format(\"MM\")) *\n          30;\n        if (\n          moment(new Date()).format(\"DD\") -\n          moment(res.data.registerTime).format(\"DD\") >\n          0\n        ) {\n          dead +=\n            moment(new Date()).format(\"DD\") -\n            moment(res.data.registerTime).format(\"DD\");\n        }\n      }\n      if (dead >= res.data.period) {\n        message.config({\n          top: 60,\n          duration: 2\n        })\n        message.warning(\"Please apply for an extension of time\")\n      }\n      setPeriod(dead);\n    });\n  }, []);\n  const handleSubmit = () => {\n    setAddperiod();\n    // const date = Number(period) + Number(addperiod);\n    const newUser = {\n      _id: modaldata._id,\n      firstName: modaldata.firstName,\n      lastname: modaldata.lastname,\n      email: modaldata.email,\n      Phone: modaldata.Phone,\n      country: modaldata.country,\n      lastpassword: passwords.lastpassword,\n      newpassword: passwords.newpassword,\n      request: addperiod,\n    };\n    if (newUser.newpassword) {\n      localStorage.setItem(\"Password\", passwords.newpassword);\n    }\n    axios.post(\"/api/users/updateusers\", newUser).then((res) => {\n      if (res.data) {\n        setData(res.data)\n        message.success(\"Success\");\n        setOpen(false);\n\n      }\n    });\n  };\n\n  const handleModalOpen = () => {\n    setModaldata(data)\n    setOpen(true)\n  }\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n\n\n  return (\n    <>\n      <h4>My Profile</h4>\n      <br />\n      <div className=\"row\">\n        <div className=\"col-lg-4 mb-5\">\n          <label for={\"firstname\"}>FirstName: </label> <br></br>\n          <Input\n            placeholder=\"FirstName\"\n            id=\"FirstName\"\n            value={data.firstName}\n\n            style={{ color: \"white\", width: \"100%\" }}\n          />\n        </div>\n        <div className=\"col-lg-4 mb-5\">\n          <label for={\"lastName\"}>LastName: </label> <br></br>\n          <Input\n            placeholder=\"lastName\"\n            id=\"lastName\"\n            value={data.lastname}\n            style={{ color: \"white\", width: \"100%\" }}\n          />\n        </div>\n      </div>\n      <br></br>\n      <br></br>\n      <br></br>\n      <div className=\"row\">\n        <div className=\"col-lg-4 mb-5\">\n          <label for={\"email\"}>Email </label> <br></br>\n          <Input\n            placeholder=\"Email\"\n            id=\"email\"\n            value={data.email}\n            style={{ color: \"white\", width: \"100%\" }}\n          />\n        </div>\n        <div className=\"col-lg-4 mb-5\">\n          <label for={\"Password\"}>Password: </label> <br></br>\n          <Input\n            placeholder=\"Password\"\n            id=\"Password\"\n            value={localStorage.getItem('Password')}\n            style={{ color: \"white\", width: \"100%\" }}\n          />\n        </div>\n        <div className=\"col-lg-4 mb-5\">\n          <label for={\"Username\"}>Username: </label> <br></br>\n          <Input\n            placeholder=\"Username\"\n            id=\"username\"\n            value={data.username}\n            style={{ color: \"white\", width: \"100%\" }}\n          />\n        </div>\n      </div>\n      <br></br>\n      <br></br>\n      <br></br>\n      <div className=\"row\">\n        <div className=\"col-lg-4 mb-5\">\n          <label for={\"Phone\"}>Phone: </label> <br></br>\n          <Input\n            placeholder=\"Phone\"\n            id=\"Phone\"\n            value={data.Phone}\n            style={{ color: \"white\", width: \"100%\" }}\n          />\n        </div>\n        <div className=\"col-lg-4 mb-5\">\n          <label for={\"country\"}>Country </label> <br></br>\n          <Input\n            placeholder=\"country\"\n            id=\"country\"\n            value={data.country}\n            style={{ color: \"white\", width: \"100%\" }}\n          />\n        </div>\n        <div className=\"col-lg-4 mb-5\">\n          <Button\n            style={{ float: \"right\", alignItems: \"center\" }}\n            onClick={handleModalOpen}\n          >\n            Edit\n          </Button>\n        </div>\n      </div>\n      <Dialog open={open} onClose={onClose} PaperProps={{ style: { borderRadius: '10px' } }}>\n        <DialogTitle textAlign=\"center\" style={{ background: \"#27283a\", color: \"white\" }}>Change My Profile</DialogTitle>\n        <DialogContent style={{ background: \"#27283a\" }} >\n          <form onSubmit={(e) => e.preventDefault()}>\n            <Stack\n              sx={{\n                width: \"100%\",\n                minWidth: { xs: \"300px\", sm: \"360px\", md: \"400px\" },\n                gap: \"1.5rem\",\n                marginTop: \"3px\"\n              }}\n            >\n              <TextField\n                // key={column.accessorKey}\n                placeholder={\"First Name\"}\n                inputProps={{ style: placeholderStyle }}\n                name={\"firstName\"}\n                value={modaldata.firstName}\n                onChange={(e) =>\n                  setModaldata({ ...modaldata, [e.target.name]: e.target.value })\n                }\n              />\n              <TextField\n                // key={column.accessorKey}\n                placeholder={\"Last Name\"}\n                inputProps={{ style: placeholderStyle }}\n                name={\"lastname\"}\n                value={modaldata.lastname}\n                onChange={(e) =>\n                  setModaldata({ ...modaldata, [e.target.name]: e.target.value })\n                }\n              />{\" \"}\n              <TextField\n                // key={column.accessorKey}\n                placeholder={\"Email\"}\n                inputProps={{ style: placeholderStyle }}\n                name={\"email\"}\n                value={modaldata.email}\n                onChange={(e) =>\n                  setModaldata({ ...modaldata, [e.target.name]: e.target.value })\n                }\n              />{\" \"}\n              <TextField\n                // key={column.accessorKey}\n                placeholder={\"Phone\"}\n                name={\"Phone\"}\n                inputProps={{ style: placeholderStyle }}\n                value={modaldata.Phone}\n                onChange={(e) =>\n                  setModaldata({ ...modaldata, [e.target.name]: e.target.value })\n                }\n              />\n              <TextField\n                // key={column.accessorKey}\n                placeholder={\"Country\"}\n                inputProps={{ style: placeholderStyle }}\n                name={\"country\"}\n                value={modaldata.country}\n                onChange={(e) =>\n                  setModaldata({ ...modaldata, [e.target.name]: e.target.value })\n                }\n              />\n              <TextField\n                // key={column.accessorKey}\n                placeholder={\"Last Password\"}\n                inputProps={{ style: placeholderStyle }}\n                name={\"lastpassword\"}\n                value={passwords.lastpassword}\n                onChange={(e) =>\n                  setPasswords({ ...passwords, [e.target.name]: e.target.value })\n                }\n                type=\"password\"\n              />\n              <TextField\n                // key={column.accessorKey}\n                placeholder={\"New Password\"}\n                inputProps={{ style: placeholderStyle }}\n                name={\"newpassword\"}\n                value={passwords.newpassword}\n                onChange={(e) =>\n                  setPasswords({ ...passwords, [e.target.name]: e.target.value })\n\n                }\n                type=\"password\"\n              />\n              {period >= modaldata.period ? (\n                // <LocalizationProvider dateAdapter={AdapterDayjs}>\n                //   <DatePicker />\n                // </LocalizationProvider>\n                <Input\n                  max={300}\n                  min={30}\n                  placeholder=\"extend your period\"\n                  inputProps={{ style: placeholderStyle }}\n                  value={addperiod}\n                  onChange={(e) => setAddperiod(e.target.value)}\n                  type=\"number\"\n                />\n              ) : null}\n            </Stack>\n          </form>\n        </DialogContent>\n        <DialogActions sx={{ p: \"1.25rem\" }} style={{ background: \"#27283a\" }}>\n          {\" \"}\n          <Button onClick={onClose} style={{ color: \"#27283a\", backgroundColor: \"#8b8fa3\" }}>Cancel</Button>\n          <Button onClick={handleSubmit} variant=\"contained\" style={{ backgroundColor: \"#8b8fa3\" }}>\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default UserProfile;\n"],"sourceRoot":""}